version: '2'

services:
  server:
    restart: always
    build:
      context: ./packages/server
      dockerfile: ./Dockerfile-development
    depends_on:
      - db
      - s3
    entrypoint:
      [
        'sh',
        'scripts/wait-for-it',
        'db:5432',
        '--',
        'sh',
        'scripts/wait-for-it',
        'http://s3:9001',
        '--',
        'sh',
        'scripts/setupDevServer.sh'
      ]
    command:
      [
        'node_modules/.bin/nodemon',
        'src/startServer.js',
        '--',
        'config',
        '--',
        'src',
        '--',
        'scripts'
      ]
    ports:
      - ${SERVER_PORT:-4000}:${SERVER_PORT:-4000}
    environment:
      - NODE_ENV=development
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB:-cokodocs_dev}
      - POSTGRES_USER=${POSTGRES_USER:-dev_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-dev_user_password}
      - SERVER_PORT=${SERVER_PORT:-4000}
      - SERVER_HOST=${SERVER_HOST:-localhost}
      - SERVER_PROTOCOL=${SERVER_PROTOCOL:-http}
    volumes:
      - ./packages/server/src/startServer.js:/home/node/cokodocs/src/startServer.js
      - ./packages/server/src/initializeWS.js:/home/node/cokodocs/src/initializeWS.js
      - ./packages/server/src/services/yjs/callback.js:/home/node/cokodocs/src/services/yjs/callback.js
      - ./packages/server/src/services/yjs/utils.js:/home/node/cokodocs/src/services/yjs/utils.js
      - ./packages/server/src/services/yjs/wsSharedDoc.js:/home/node/cokodocs/src/services/yjs/wsSharedDoc.js
  db:
    image: postgres:14-alpine
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-cokodocs_dev}
      - POSTGRES_USER=${POSTGRES_USER:-dev_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-dev_user_password}
    volumes:
      - ./scripts/init-pgboss.sql:/docker-entrypoint-initdb.d/init-pgboss.sql
  s3:
    image: minio/minio:RELEASE.2022-05-26T05-48-41Z
    ports:
      - ${S3_PORT:-9002}:9000
      - ${MINIO_CONSOLE_PORT:-9001}:9001
    volumes:
      - minio_storage:/data
    environment:
      - MINIO_ROOT_USER=${S3_ACCESS_KEY_ID_ADMIN:-admin}
      - MINIO_ROOT_PASSWORD=${S3_SECRET_ACCESS_KEY_ADMIN:-superSecretAdminPassword}
    command: server --console-address ":9001" /data
    healthcheck:
      test:
        [
          'CMD',
          'curl',
          '-f',
          'http://localhost:9002/minio/health/live'
        ]
      interval: 30s
      timeout: 20s
      retries: 10
  createbucket:
    image: minio/mc:RELEASE.2022-05-09T04-08-26Z
    depends_on:
      s3:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c " /usr/bin/mc config host add cokodocs ${S3_PROTOCOL:-http}://${S3_HOST:-s3}:${S3_PORT:-9002} ${S3_ACCESS_KEY_ID_ADMIN:-admin} ${S3_SECRET_ACCESS_KEY_ADMIN:-superSecretAdminPassword}; /usr/bin/mc admin user add cokodocs/ ${S3_ACCESS_KEY_ID_USER:-cokodocs} ${S3_SECRET_ACCESS_KEY_USER:-superSecretUserPassword}; /usr/bin/mc admin user enable cokodocs/ ${S3_ACCESS_KEY_ID_USER:-cokodocs}; /usr/bin/mc mb cokodocs/${S3_BUCKET:-uploads}; /usr/bin/mc admin policy set cokodocs/ readwrite user=${S3_ACCESS_KEY_ID_USER:-cokodocs}; exit 0; "
volumes:
  minio_storage:
