version: '3'

services:
  client:
    build:
      context: ./packages/client
      dockerfile: ./Dockerfile-development
    command: ['node_modules/.bin/coko-client-dev']
    ports:
      - ${CLIENT_PORT:-4000}:${CLIENT_PORT:-4000}
    environment:
      - NODE_ENV=development
      - CLIENT_PORT=${CLIENT_PORT:-4000}
      - CLIENT_FAST_REFRESH=1
      - CLIENT_PAGE_TITLE=${CLIENT_PAGE_TITLE:-CokoDocs}
      - CLIENT_LANGUAGE=${CLIENT_LANGUAGE:-"en-US"}
      - CLIENT_FAVICON_PATH=${CLIENT_FAVICON_PATH:-../static/favicon.ico}
      - CLIENT_WEBSOCKET_URL=${CLIENT_WEBSOCKET_URL:-ws://localhost:3001}
      - SERVER_URL=${SERVER_URL:-http://localhost:3000}
      - CLIENT_LOAD_EXTRA_THEME=${CLIENT_LOAD_EXTRA_THEME}
      - CLIENT_SHOW_EMAIL_LOGIN_OPTION=${CLIENT_SHOW_EMAIL_LOGIN_OPTION:-true}
    volumes:
      - ./packages/client/app:/home/node/app/app
      - ./packages/client/static:/home/node/app/static
    tty: true

  server:
    build:
      context: ./packages/server
      dockerfile: ./Dockerfile-development
    depends_on:
      - db
    entrypoint:
      [
        'node_modules/.bin/wait-for-it',
        'db:5432',
        '--',
        'sh',
        'scripts/setupDevServer.sh',
      ]
    command:
      [
        'node_modules/.bin/nodemon',
        'startServer.js',
        '--watch',
        'api',
        '--watch',
        'config',
        '--watch',
        'controllers',
        '--watch',
        'models',
        '--watch',
        'services',
        '--watch',
        'scripts',
        '--watch',
        '--ext',
        'js, graphql',
      ]
    ports:
      - ${SERVER_PORT:-3000}:3000
      - ${WS_SERVER_PORT:-3001}:${WS_SERVER_PORT:-3001}
    environment:
      - NODE_ENV=development
      - PUBSWEET_SECRET=${PUBSWEET_SECRET:-dev_secret}
      - POSTGRES_HOST=${POSTGRES_HOST:-db}
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - POSTGRES_DB=${POSTGRES_DB:-cokodocs_dev}
      - POSTGRES_USER=${POSTGRES_USER:-dev_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-dev_user_password}
      - WS_SERVER_PORT=${WS_SERVER_PORT:-3001}
      - CLIENT_URL=${CLIENT_URL:-http://localhost:4000}
      - CHATGPT_URL=${CHATGPT_URL}
      - CHATGPT_KEY=${CHATGPT_KEY}
      - MAILER_SENDER=${MAILER_SENDER:-dev@example.com}
      - MAILER_HOSTNAME=${MAILER_HOSTNAME}
      - MAILER_PORT=${MAILER_PORT}
      - MAILER_USER=${MAILER_USER}
      - MAILER_PASSWORD=${MAILER_PASSWORD}
      - PASSWORD_RESET_PATH=${PASSWORD_RESET_PATH:-password-reset}
    volumes:
      - ./packages/server/api:/home/node/cokodocs/api
      - ./packages/server/config:/home/node/cokodocs/config
      - ./packages/server/controllers:/home/node/cokodocs/controllers
      - ./packages/server/models:/home/node/cokodocs/models
      - ./packages/server/scripts:/home/node/cokodocs/scripts
      - ./packages/server/services:/home/node/cokodocs/services
      - ./packages/server/startServer.js:/home/node/cokodocs/startServer.js
      - ./packages/server/.env:/home/node/cokodocs/.env

  db:
    image: postgres:14
    ports:
      - ${POSTGRES_PORT:-5432}:5432
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-cokodocs_dev}
      - POSTGRES_USER=${POSTGRES_USER:-dev_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-dev_user_password}
    volumes:
      - ./scripts/init-pgboss.sql:/docker-entrypoint-initdb.d/init-pgboss.sql

  adminer:
    image: adminer
    ports: 
      - 8080:8080